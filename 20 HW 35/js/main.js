const userData = {
	USD: 1000,
	EUR: 900,
	UAH: 15000,
	BIF: 20000,
	AOA: 100
};

const bankData = {
    USD: {
        max: 3000,
        min: 100,
        img: 'üíµ'
    },
    EUR: {
        max: 1000,
        min: 50,
        img: 'üí∂'
    },
    UAH: {
        max: 0,
        min: 0,
        img: 'üí¥'
    },
    GBP: {
        max: 10000,
        min: 100,
        img: 'üí∑'
    }
};

const availableUserCurrency = Object.keys(userData);

function getMoney(message) {
    return new Promise(function (resolve,reject) {
        const question = confirm(message);
        question ? resolve() : reject();
    })
}

function chooseCurrency(message) {
    let question;
    return new Promise(function (resolve) {
        do {
            question = prompt(message);
        } while (question === null || !availableUserCurrency.includes(question.toUpperCase()));
        resolve(question.toUpperCase());
    })
}

function enterSum(currency) {
    return new Promise(function(resolve, reject) {
        const request = Number(prompt('–í–≤–µ–¥—ñ—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω—É —Å—É–º–º—É'));
        let message = '';
        if (!request) {message = '–í–∏ –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ –∞–±–æ –Ω—É–ª—å'}
        else if (request > userData[currency] || request > bankData[currency].max) {
            message = `–í–≤–µ–¥–µ–Ω–∞ —Å—É–º–∞ –±—ñ–ª—å—à–∞ –∑–∞ –¥–æ—Å—Ç—É–ø–Ω—É. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ —Å—É–º–∞ –∑–Ω—è—Ç—Ç—è: ${Math.min(userData[currency], bankData[currency].max)}`
        }
        else if (request < bankData[currency].min) {
            message = `–í–≤–µ–¥–µ–Ω–∞ —Å—É–º–∞ –º–µ–Ω—à–∞ –∑–∞ –¥–æ—Å—Ç—É–ø–Ω—É. –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Å—É–º–∞ –∑–Ω—è—Ç—Ç—è: ${bankData[currency].min}`
        };
        message !== '' ?  reject(message) : resolve(request);
    })
}

function displayMessage(message) {
    return new Promise(function (resolve) {
        console.log(message);
        resolve();
    })
}

getMoney('–ü–æ–¥–∏–≤–∏—Ç–∏—Å—è –±–∞–ª–∞–Ω—Å –∫–∞—Ä—Ç—ñ?')
    .then(
        function(){
            chooseCurrency(`–í–≤–µ–¥—ñ—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω—É –≤–∞–ª—é—Ç—É –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É. –î–æ—Å—Ç—É–ø–Ω—ñ: ${availableUserCurrency}`)
                .then(
                    function(key) {
                        displayMessage(`–ë–∞–ª–∞–Ω—Å —Å—Ç–∞–Ω–æ–≤–∏—Ç—å: ${userData[key]} ${key}`);
                    }
                )
        },
        function(){
            const availableBankCurrency = availableUserCurrency.filter((value) => {
                if (Object.keys(bankData).includes(value)) {
                    return bankData[value].max !== 0;
                }
            })
            chooseCurrency(`–í–≤–µ–¥—ñ—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω—É –≤–∞–ª—é—Ç—É –¥–ª—è –∑–Ω—è—Ç—Ç—è. –î–æ—Å—Ç—É–ø–Ω—ñ: ${availableBankCurrency}`)
                .then(
                    function(key) {
                        enterSum(key)
                            .then(
                                function(sum) {
                                    displayMessage(`–û—Ç –í–∞—à—ñ –≥—Ä–æ—à—ñ: ${sum} ${key} ${bankData[key].img}`);
                                },
                                function(message) {
                                    displayMessage(message);
                                }
                            )
                    }
                )
        }
    )
    .catch(
        function() {displayMessage('–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞');}
    )
    .finally(
        function() {displayMessage('–î—è–∫—É—é, –≥–∞—Ä–Ω–æ–≥–æ –¥–Ω—è üòä');}
    )